{"CharlotteDunois\\Athena\\AthenaCache":{"name":"CharlotteDunois\\Athena\\AthenaCache","line":15,"short_desc":"The Athena Cache client. Uses Redis as cache asynchronously.","long_desc":"","hint":null,"tags":[],"namespace":"CharlotteDunois\\Athena","file":"\/volume3\/web\/github\/repos\/CharlotteDunois-Athena\/master\/src\/AthenaCache.php","relative_file":"\/src\/AthenaCache.php","parent":null,"modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":{"CharlotteDunois\\Events\\EventEmitterInterface":"CharlotteDunois\\Events\\EventEmitterInterface","CharlotteDunois\\Athena\\CacheInterface":"CharlotteDunois\\Athena\\CacheInterface"},"traits":{"CharlotteDunois\\Events\\EventEmitterTrait":"CharlotteDunois\\Events\\EventEmitterTrait"},"source":null,"properties":{"lifetime":{"name":"lifetime","line":40,"short_desc":"Maximum default lifetime in seconds.","long_desc":"","hint":[["int",false]],"hint_desc":"","tags":[],"modifiers":1,"default":{"nodeType":"Scalar_LNumber","value":3600,"attributes":{"startLine":40,"endLine":40,"kind":10}},"errors":[],"source":null}},"methods":{"__construct":{"name":"__construct","line":58,"short_desc":"Constructor. Optional options are as following:","long_desc":"```\narray(\n    'address' => string, (the address to connect to (an URI string), defaults to tcp:\/\/127.0.0.1:6379)\n    'connector' => \\React\\Socket\\ConnectorInterface, (a connector used to connect to the redis server)\n    'prefix' => string, (the prefix to prepend to keys to create an user-land namespace, useful for multiple \"databases\" inside a logical database)\n)\n```\n\nThe client has two events: error and debug. Debug contains debug information. And error gets emitted when redis emits an error.","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"loop":{"name":"loop","line":58,"short_desc":"","long_desc":null,"hint":[["\\React\\EventLoop\\LoopInterface",false],["null",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":{"nodeType":"Name_FullyQualified","parts":["React","EventLoop","LoopInterface"],"attributes":{"startLine":58,"endLine":58}},"attributes":{"startLine":58,"endLine":58}},"default":"null","variadic":false,"is_by_ref":false},"options":{"name":"options","line":58,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":"array()","variadic":false,"is_by_ref":false}}},"connect":{"name":"connect","line":79,"short_desc":"Starts connecting to redis.","long_desc":"","hint":[["\\React\\Promise\\PromiseInterface",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"delete":{"name":"delete","line":254,"short_desc":"Deletes an item in the cache. The promise gets always rejected on errors.","long_desc":"","hint":[["\\React\\Promise\\PromiseInterface",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"key":{"name":"key","line":254,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false}}},"destroy":{"name":"destroy","line":135,"short_desc":"Disconnects from redis.","long_desc":"","hint":[["void",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"get":{"name":"get","line":150,"short_desc":"Gets an item from the cache. The promise gets always rejected on errors.","long_desc":"","hint":[["\\React\\Promise\\PromiseInterface",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"key":{"name":"key","line":150,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false},"defVal":{"name":"defVal","line":150,"short_desc":"","long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":null,"default":"null","variadic":false,"is_by_ref":false},"throwOnNotFound":{"name":"throwOnNotFound","line":150,"short_desc":"Rejects the promise if the item is not found.","long_desc":null,"hint":[["bool",false]],"tags":[],"modifiers":"bool","default":"false","variadic":false,"is_by_ref":false}}},"getAll":{"name":"getAll","line":183,"short_desc":"Gets multiple items from the cache. The promise gets always rejected on errors.","long_desc":"","hint":[["\\React\\Promise\\PromiseInterface",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"keys":{"name":"keys","line":183,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":null,"variadic":false,"is_by_ref":false},"defVal":{"name":"defVal","line":183,"short_desc":"","long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":null,"default":"null","variadic":false,"is_by_ref":false},"omitIfNotFound":{"name":"omitIfNotFound","line":183,"short_desc":"","long_desc":null,"hint":[["bool",false]],"tags":[],"modifiers":"bool","default":"false","variadic":false,"is_by_ref":false}}},"getLoop":{"name":"getLoop","line":119,"short_desc":"Returns the loop.","long_desc":"","hint":[["\\React\\EventLoop\\LoopInterface",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"getOptions":{"name":"getOptions","line":111,"short_desc":"Returns the options.","long_desc":"","hint":[["array",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"getRedis":{"name":"getRedis","line":127,"short_desc":"Returns the redis client.","long_desc":"","hint":[["\\Clue\\React\\Redis\\Client",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"set":{"name":"set","line":231,"short_desc":"Sets an item in the cache. The promise gets always rejected on errors.","long_desc":"","hint":[["\\React\\Promise\\PromiseInterface",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"key":{"name":"key","line":231,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false},"value":{"name":"value","line":231,"short_desc":"Must be serializable.","long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"lifetime":{"name":"lifetime","line":231,"short_desc":"Maximum lifetime in seconds.","long_desc":null,"hint":[["int",false],["null",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"int","attributes":{"startLine":231,"endLine":231}},"default":"null","variadic":false,"is_by_ref":false}}}},"constants":[]},"CharlotteDunois\\Athena\\CacheInterface":{"name":"CharlotteDunois\\Athena\\CacheInterface","line":15,"short_desc":"The asynchronous cache interface.","long_desc":"","hint":null,"tags":[],"namespace":"CharlotteDunois\\Athena","file":"\/volume3\/web\/github\/repos\/CharlotteDunois-Athena\/master\/src\/CacheInterface.php","relative_file":"\/src\/CacheInterface.php","parent":null,"modifiers":null,"is_trait":false,"is_interface":true,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":[],"methods":{"delete":{"name":"delete","line":48,"short_desc":"Deletes an item in the cache. The promise gets always rejected on errors.","long_desc":"","hint":[["\\React\\Promise\\PromiseInterface",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"key":{"name":"key","line":48,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false}}},"get":{"name":"get","line":23,"short_desc":"Gets an item from the cache. The promise gets always rejected on errors.","long_desc":"","hint":[["\\React\\Promise\\PromiseInterface",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"key":{"name":"key","line":23,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false},"defVal":{"name":"defVal","line":23,"short_desc":"","long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":null,"default":"null","variadic":false,"is_by_ref":false},"throwOnNotFound":{"name":"throwOnNotFound","line":23,"short_desc":"Rejects the promise if the item is not found.","long_desc":null,"hint":[["bool",false]],"tags":[],"modifiers":"bool","default":"false","variadic":false,"is_by_ref":false}}},"getAll":{"name":"getAll","line":32,"short_desc":"Gets multiple items from the cache. The promise gets always rejected on errors.","long_desc":"","hint":[["\\React\\Promise\\PromiseInterface",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"keys":{"name":"keys","line":32,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":null,"variadic":false,"is_by_ref":false},"defVal":{"name":"defVal","line":32,"short_desc":"","long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":null,"default":"null","variadic":false,"is_by_ref":false},"omitIfNotFound":{"name":"omitIfNotFound","line":32,"short_desc":"","long_desc":null,"hint":[["bool",false]],"tags":[],"modifiers":"bool","default":"false","variadic":false,"is_by_ref":false}}},"set":{"name":"set","line":41,"short_desc":"Sets an item in the cache. The promise gets always rejected on errors.","long_desc":"","hint":[["\\React\\Promise\\PromiseInterface",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"key":{"name":"key","line":41,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false},"value":{"name":"value","line":41,"short_desc":"Must be serializable.","long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"lifetime":{"name":"lifetime","line":41,"short_desc":"Maximum lifetime in seconds.","long_desc":null,"hint":[["int",false],["null",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"int","attributes":{"startLine":41,"endLine":41}},"default":"null","variadic":false,"is_by_ref":false}}}},"constants":[]}}